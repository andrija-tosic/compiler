
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Wed Dec 08 11:27:03 CET 2021
//----------------------------------------------------

import java_cup.runtime.*;
import java.io.*;

/** CUP v0.10k generated parser.
  * @version Wed Dec 08 11:27:03 CET 2021
  */
public class MPParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public MPParser() {super();}

  /** Constructor which sets the default scanner. */
  public MPParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\035\000\002\003\012\000\002\002\004\000\002\005" +
    "\004\000\002\007\004\000\002\007\003\000\002\010\005" +
    "\000\002\004\005\000\002\004\003\000\002\011\003\000" +
    "\002\011\003\000\002\006\005\000\002\012\005\000\002" +
    "\012\003\000\002\013\003\000\002\013\003\000\002\013" +
    "\003\000\002\013\003\000\002\013\003\000\002\014\006" +
    "\000\002\015\006\000\002\016\005\000\002\017\005\000" +
    "\002\017\003\000\002\020\005\000\002\020\003\000\002" +
    "\021\003\000\002\021\003\000\002\021\005\000\002\022" +
    "\010" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\076\000\004\004\005\001\002\000\004\002\100\001" +
    "\002\000\004\023\006\001\002\000\004\017\007\001\002" +
    "\000\010\024\ufffa\025\ufffa\030\ufffa\001\002\000\006\024" +
    "\012\030\011\001\002\000\004\017\077\001\002\000\004" +
    "\027\013\001\002\000\004\005\014\001\002\000\004\017" +
    "\007\001\002\000\004\010\017\001\002\000\004\031\066" +
    "\001\002\000\014\010\017\012\020\013\031\014\027\017" +
    "\030\001\002\000\004\023\063\001\002\000\010\011\ufff2" +
    "\016\ufff2\027\ufff2\001\002\000\006\011\ufff5\027\ufff5\001" +
    "\002\000\010\011\ufff3\016\ufff3\027\ufff3\001\002\000\010" +
    "\011\ufff4\016\ufff4\027\ufff4\001\002\000\006\011\061\027" +
    "\060\001\002\000\010\011\ufff0\016\ufff0\027\ufff0\001\002" +
    "\000\010\017\034\020\035\023\041\001\002\000\004\026" +
    "\051\001\002\000\004\023\033\001\002\000\010\011\ufff1" +
    "\016\ufff1\027\ufff1\001\002\000\010\017\034\020\035\023" +
    "\041\001\002\000\020\011\uffe8\015\uffe8\016\uffe8\021\uffe8" +
    "\022\uffe8\024\uffe8\027\uffe8\001\002\000\020\011\uffe7\015" +
    "\uffe7\016\uffe7\021\uffe7\022\uffe7\024\uffe7\027\uffe7\001\002" +
    "\000\020\011\uffe9\015\uffe9\016\uffe9\021\uffe9\022\uffe9\024" +
    "\uffe9\027\uffe9\001\002\000\020\011\uffeb\015\uffeb\016\uffeb" +
    "\021\uffeb\022\046\024\uffeb\027\uffeb\001\002\000\006\021" +
    "\044\024\050\001\002\000\010\017\034\020\035\023\041" +
    "\001\002\000\006\021\044\024\043\001\002\000\020\011" +
    "\uffe6\015\uffe6\016\uffe6\021\uffe6\022\uffe6\024\uffe6\027\uffe6" +
    "\001\002\000\010\017\034\020\035\023\041\001\002\000" +
    "\020\011\uffec\015\uffec\016\uffec\021\uffec\022\046\024\uffec" +
    "\027\uffec\001\002\000\010\017\034\020\035\023\041\001" +
    "\002\000\020\011\uffea\015\uffea\016\uffea\021\uffea\022\uffea" +
    "\024\uffea\027\uffea\001\002\000\010\011\uffee\016\uffee\027" +
    "\uffee\001\002\000\010\017\034\020\035\023\041\001\002" +
    "\000\012\011\uffed\016\uffed\021\044\027\uffed\001\002\000" +
    "\006\015\054\021\044\001\002\000\014\010\017\012\020" +
    "\013\031\014\027\017\030\001\002\000\004\016\056\001" +
    "\002\000\014\010\017\012\020\013\031\014\027\017\030" +
    "\001\002\000\010\011\uffe5\016\uffe5\027\uffe5\001\002\000" +
    "\014\010\017\012\020\013\031\014\027\017\030\001\002" +
    "\000\012\011\ufff7\016\ufff7\027\ufff7\031\ufff7\001\002\000" +
    "\006\011\ufff6\027\ufff6\001\002\000\004\017\064\001\002" +
    "\000\004\024\065\001\002\000\010\011\uffef\016\uffef\027" +
    "\uffef\001\002\000\004\002\001\001\002\000\006\010\uffff" +
    "\017\007\001\002\000\006\010\ufffd\017\ufffd\001\002\000" +
    "\006\025\072\030\011\001\002\000\006\006\073\007\075" +
    "\001\002\000\006\010\ufff9\017\ufff9\001\002\000\006\010" +
    "\ufffc\017\ufffc\001\002\000\006\010\ufff8\017\ufff8\001\002" +
    "\000\006\010\ufffe\017\ufffe\001\002\000\010\024\ufffb\025" +
    "\ufffb\030\ufffb\001\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\076\000\004\003\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\004\007\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\005\014\001\001\000\010\004\070\007\066\010\067" +
    "\001\001\000\004\006\015\001\001\000\002\001\001\000" +
    "\020\006\031\012\024\013\021\014\023\015\022\016\020" +
    "\022\025\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\017\052\020\036\021" +
    "\035\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\017\037\020\036\021\035\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\017\041\020\036\021" +
    "\035\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\020\044\021\035\001\001\000\002\001\001\000\004\021" +
    "\046\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\017\051\020\036\021\035\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\006\031\013\054\014\023\015\022" +
    "\016\020\022\025\001\001\000\002\001\001\000\016\006" +
    "\031\013\056\014\023\015\022\016\020\022\025\001\001" +
    "\000\002\001\001\000\016\006\031\013\061\014\023\015" +
    "\022\016\020\022\025\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\004\070\010\075\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\073\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MPParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MPParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MPParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



   public static void main( String[] args )
   {
      try
	  {
		   FileReader file = new FileReader( args[0] );
		   Scanner scanner = new MPLexer( file );
		   MPParser parser = new MPParser( scanner );
		   parser.parse();
	  }
	  catch( Exception e )
	  {
		   e.printStackTrace();
	  }
   }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$MPParser$actions {
  private final MPParser parser;

  /** Constructor */
  CUP$MPParser$actions(MPParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$MPParser$do_action(
    int                        CUP$MPParser$act_num,
    java_cup.runtime.lr_parser CUP$MPParser$parser,
    java.util.Stack            CUP$MPParser$stack,
    int                        CUP$MPParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MPParser$result;

      /* select the action based on the action number */
      switch (CUP$MPParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // IfNar ::= IF Izraz THEN Naredba ELSE Naredba 
            {
              Object RESULT = null;
		
             System.out.println( "Redukcija po smeni 28." );
          
              CUP$MPParser$result = new java_cup.runtime.Symbol(16/*IfNar*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // FIzraz ::= LEFTPAR Izraz RIGHTPAR 
            {
              Object RESULT = null;
		
              System.out.println( "Redukcija po smeni 27." );
           
              CUP$MPParser$result = new java_cup.runtime.Symbol(15/*FIzraz*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // FIzraz ::= CONST 
            {
              Object RESULT = null;
		
              System.out.println( "Redukcija po smeni 26." );
           
              CUP$MPParser$result = new java_cup.runtime.Symbol(15/*FIzraz*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // FIzraz ::= ID 
            {
              Object RESULT = null;
		
              System.out.println( "Redukcija po smeni 25." );
           
              CUP$MPParser$result = new java_cup.runtime.Symbol(15/*FIzraz*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // PIzraz ::= FIzraz 
            {
              Object RESULT = null;
		
              System.out.println( "Redukcija po smeni 24." );
           
              CUP$MPParser$result = new java_cup.runtime.Symbol(14/*PIzraz*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // PIzraz ::= PIzraz MUL FIzraz 
            {
              Object RESULT = null;
		
              System.out.println( "Redukcija po smeni 23." );
           
              CUP$MPParser$result = new java_cup.runtime.Symbol(14/*PIzraz*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Izraz ::= PIzraz 
            {
              Object RESULT = null;
		
             System.out.println( "Redukcija po smeni 22." );
          
              CUP$MPParser$result = new java_cup.runtime.Symbol(13/*Izraz*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Izraz ::= Izraz PLUS PIzraz 
            {
              Object RESULT = null;
		
             System.out.println( "Redukcija po smeni 21." );
          
              CUP$MPParser$result = new java_cup.runtime.Symbol(13/*Izraz*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Dodela ::= ID ASSIGN Izraz 
            {
              Object RESULT = null;
		
              System.out.println( "Redukcija po smeni 20." );
           
              CUP$MPParser$result = new java_cup.runtime.Symbol(12/*Dodela*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Izlaz ::= WRITE LEFTPAR Izraz RIGHTPAR 
            {
              Object RESULT = null;
		
             System.out.println( "Redukcija po smeni 19." );
          
              CUP$MPParser$result = new java_cup.runtime.Symbol(11/*Izlaz*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Ulaz ::= READ LEFTPAR ID RIGHTPAR 
            {
              Object RESULT = null;
		
            System.out.println( "Redukcija po smeni 18." );
         
              CUP$MPParser$result = new java_cup.runtime.Symbol(10/*Ulaz*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Naredba ::= IfNar 
            {
              Object RESULT = null;
		
               System.out.println( "Redukcija po smeni 17." );
            
              CUP$MPParser$result = new java_cup.runtime.Symbol(9/*Naredba*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // Naredba ::= Blok 
            {
              Object RESULT = null;
		
               System.out.println( "Redukcija po smeni 16." );
            
              CUP$MPParser$result = new java_cup.runtime.Symbol(9/*Naredba*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Naredba ::= Dodela 
            {
              Object RESULT = null;
		
               System.out.println( "Redukcija po smeni 15." );
            
              CUP$MPParser$result = new java_cup.runtime.Symbol(9/*Naredba*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Naredba ::= Izlaz 
            {
              Object RESULT = null;
		
               System.out.println( "Redukcija po smeni 14." );
            
              CUP$MPParser$result = new java_cup.runtime.Symbol(9/*Naredba*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // Naredba ::= Ulaz 
            {
              Object RESULT = null;
		
               System.out.println( "Redukcija po smeni 13." );
            
              CUP$MPParser$result = new java_cup.runtime.Symbol(9/*Naredba*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // NizNar ::= Naredba 
            {
              Object RESULT = null;
		
              System.out.println( "Redukcija po smeni 12." );
           
              CUP$MPParser$result = new java_cup.runtime.Symbol(8/*NizNar*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // NizNar ::= NizNar SEMI Naredba 
            {
              Object RESULT = null;
		
              System.out.println( "Redukcija po smeni 11." );
           
              CUP$MPParser$result = new java_cup.runtime.Symbol(8/*NizNar*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Blok ::= BEGIN NizNar END 
            {
              Object RESULT = null;
		
            System.out.println( "Redukcija po smeni 10." );
         
              CUP$MPParser$result = new java_cup.runtime.Symbol(4/*Blok*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Tip ::= CHAR 
            {
              Object RESULT = null;
		
           System.out.println( "Redukcija po smeni 9." );
        
              CUP$MPParser$result = new java_cup.runtime.Symbol(7/*Tip*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Tip ::= INTEGER 
            {
              Object RESULT = null;
		
           System.out.println( "Redukcija po smeni 8." );
        
              CUP$MPParser$result = new java_cup.runtime.Symbol(7/*Tip*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // NizImena ::= ID 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija po smeni 7." );
             
              CUP$MPParser$result = new java_cup.runtime.Symbol(2/*NizImena*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // NizImena ::= NizImena COMMA ID 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija po smeni 6." );
             
              CUP$MPParser$result = new java_cup.runtime.Symbol(2/*NizImena*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Deklaracija ::= NizImena COLON Tip 
            {
              Object RESULT = null;
		
                   System.out.println( "Redukcija po smeni 5." );
                
              CUP$MPParser$result = new java_cup.runtime.Symbol(6/*Deklaracija*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // NizDekl ::= Deklaracija 
            {
              Object RESULT = null;
		
               System.out.println( "Redukcija po smeni 4." );
            
              CUP$MPParser$result = new java_cup.runtime.Symbol(5/*NizDekl*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // NizDekl ::= NizDekl Deklaracija 
            {
              Object RESULT = null;
		
               System.out.println( "Redukcija po smeni 3." );
            
              CUP$MPParser$result = new java_cup.runtime.Symbol(5/*NizDekl*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // DeklProm ::= VAR NizDekl 
            {
              Object RESULT = null;
		
                System.out.println( "Redukcija po smeni 2." );
             
              CUP$MPParser$result = new java_cup.runtime.Symbol(3/*DeklProm*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= Program EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$MPParser$stack.elementAt(CUP$MPParser$top-1)).value;
		RESULT = start_val;
              CUP$MPParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$MPParser$parser.done_parsing();
          return CUP$MPParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // Program ::= PROGRAM LEFTPAR NizImena RIGHTPAR SEMI DeklProm Blok DOT 
            {
              Object RESULT = null;
		
               System.out.println( "Redukcija po smeni 1." );
            
              CUP$MPParser$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MPParser$stack.elementAt(CUP$MPParser$top-0)).right, RESULT);
            }
          return CUP$MPParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

